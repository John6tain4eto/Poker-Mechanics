<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Poker</name>
    </assembly>
    <members>
        <member name="T:Poker.AddChips">
            <summary>
            Adding Chips
            </summary>
        </member>
        <member name="F:Poker.AddChips.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Poker.AddChips.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Poker.AddChips.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Poker.Character.Character.Fold(System.Boolean@,System.Boolean@,System.Windows.Forms.Label)">
            <summary>
            Fold can be used for both player and bot it means "give up"
            </summary>
            <param name="isOnTurn">if set to <c>true</c> [is on turn].</param>
            <param name="isFinalTurn">if set to <c>true</c> [is final turn].</param>
            <param name="sStatus">The s status.</param>
        </member>
        <member name="M:Poker.Character.Character.ChangeStatusToChecking(System.Boolean@,System.Windows.Forms.Label)">
            <summary>
            Changes the status label of the bot when it is checking the community cards
            </summary>
            <param name="isBotsTurn">if set to <c>true</c> [is bots turn].</param>
            <param name="statusLabel">The status label.</param>
        </member>
        <member name="M:Poker.Character.Character.Call(System.Int32@,System.Boolean@,System.Windows.Forms.Label)">
            <summary>
            Calls the specified value in chips
            </summary>
            <param name="botChips">The bot chips.</param>
            <param name="isBotsTurn">if set to <c>true</c> [is bots turn].</param>
            <param name="statusLabel">The status label.</param>
        </member>
        <member name="M:Poker.Character.Character.RaiseBet(System.Int32@,System.Boolean@,System.Windows.Forms.Label)">
            <summary>
            Raises the bet
            </summary>
            <param name="botChips">The bot chips.</param>
            <param name="isBotsTurn">if set to <c>true</c> [is bots turn].</param>
            <param name="statusLabel">The status label.</param>
        </member>
        <member name="M:Poker.Form1.CheckForStraightFlush(System.Double@,System.Double@,System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
            <summary>
            This method checks player's cards for Straight Flush
            </summary>
            <param name="currentCardsValue">players cards</param>
            <param name="cardsPower">cards weight</param>
            <param name="straightOfClubs">Checks if the pleyer has straight of Clubs</param>
            <param name="straightOfDiamonds">Checks if the pleyer has straight of Diamonds</param>
            <param name="straightOfHearts">Checks if the pleyer has straight of Hearts</param>
            <param name="straightOfSpades">Checks if the pleyer has straight of Spades</param>
        </member>
        <member name="M:Poker.Form1.CheckRaise(System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="currentTurn"></param>
            <param name="raiseTurn"></param>
            <returns></returns>
        </member>
        <member name="M:Poker.Form1.FixCall(System.Windows.Forms.Label,System.Int32@,System.Int32@,System.Int32)">
            <summary>
            </summary>
            <param name="status"></param>
            <param name="cCall"></param>
            <param name="cRaise"></param>
            <param name="options"></param>
        </member>
        <member name="M:Poker.Form1.AllIn">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Poker.Form1.Finish(System.Int32)">
            <summary>
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:Poker.Form1.FixWinners">
            <summary>
            </summary>
        </member>
        <member name="M:Poker.Form1.AI(System.Int32,System.Int32,System.Int32@,System.Boolean@,System.Boolean@,System.Windows.Forms.Label,System.Int32,System.Double,System.Double)">
            <summary>
                x
            </summary>
            <param name="firstCall">The first call.</param>
            <param name="secondCall">The second call.</param>
            <param name="sChips">The s chips.</param>
            <param name="sTurn">if set to <c>true</c> [s turn].</param>
            <param name="sFTurn">if set to <c>true</c> [s f turn].</param>
            <param name="sStatus">The s status.</param>
            <param name="name">The name.</param>
            <param name="botPower">The bot cardsPower.</param>
            <param name="botCurrent">The bot curentCardsValue.</param>
        </member>
        <member name="M:Poker.Form1.HighCard(System.Int32@,System.Boolean@,System.Boolean@,System.Windows.Forms.Label,System.Double)">
            <summary>
            </summary>
            <param name="sChips">The s chips.</param>
            <param name="sTurn">if set to <c>true</c> [s turn].</param>
            <param name="sFTurn">if set to <c>true</c> [s f turn].</param>
            <param name="sStatus">The s status.</param>
            <param name="botPower">The bot cardsPower.</param>
        </member>
        <member name="M:Poker.Form1.PairTable(System.Int32@,System.Boolean@,System.Boolean@,System.Windows.Forms.Label,System.Double)">
            <summary>
            </summary>
            <param name="sChips">The s chips.</param>
            <param name="sTurn">if set to <c>true</c> [s turn].</param>
            <param name="sFTurn">if set to <c>true</c> [s f turn].</param>
            <param name="sStatus">The s status.</param>
            <param name="botPower">The bot cardsPower.</param>
        </member>
        <member name="M:Poker.Form1.PairHand(System.Int32@,System.Boolean@,System.Boolean@,System.Windows.Forms.Label,System.Double)">
            <summary>
                Pairs the hand.
            </summary>
            <param name="sChips">The s chips.</param>
            <param name="sTurn">if set to <c>true</c> [s turn].</param>
            <param name="sFTurn">if set to <c>true</c> [s f turn].</param>
            <param name="sStatus">The s status.</param>
            <param name="botPower">The bot cardsPower.</param>
        </member>
        <member name="M:Poker.Form1.TwoPairs(System.Int32@,System.Boolean@,System.Boolean@,System.Windows.Forms.Label,System.Double)">
            <summary>
            </summary>
            <param name="sChips">The s chips.</param>
            <param name="sTurn">if set to <c>true</c> [s turn].</param>
            <param name="sFTurn">if set to <c>true</c> [s f turn].</param>
            <param name="sStatus">The s status.</param>
            <param name="botPower">The bot cardsPower.</param>
        </member>
        <member name="M:Poker.Form1.ThreeOfAKind(System.Int32@,System.Boolean@,System.Boolean@,System.Windows.Forms.Label,System.Int32,System.Double)">
            <summary>
                Threes the kind of the of a.
            </summary>
            <param name="sChips">The s chips.</param>
            <param name="sTurn">if set to <c>true</c> [s turn].</param>
            <param name="sFTurn">if set to <c>true</c> [s f turn].</param>
            <param name="sStatus">The s status.</param>
            <param name="name">The name.</param>
            <param name="botPower">The bot cardsPower.</param>
        </member>
        <member name="F:Poker.Form1.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Poker.Form1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Poker.Form1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Poker.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="T:Poker.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Poker.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Poker.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Poker.Properties.Resources.clover_playing_card_gambling_clubs_suit_deck_1_128">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:Poker.Properties.Resources.poker_table___Copy">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
    </members>
</doc>
